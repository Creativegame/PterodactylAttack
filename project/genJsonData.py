#!/usr/bin/env python

"""

This script is called by "build.py" in order to create "src/jsonData.js", which
contains the definition of a javascript dictionary, mapping a json file
name to its data.

Example:

Ptero.jsonData = {
    "foo/bar.json": { /* whatever is inside "bar.json" */ },
    "foo/baz.json": { /* whatever is inside "baz.json" */ },
};

This was a strange way to resolve a CocoonJS crash.  CocoonJS seemed
to not like loading too many JSON files, which I noticed after the
addition of a single JSON file caused the entire thing to crash.

Dumping JSON data into a file fixed the issue, so that is the purpose
of this script.

"""

import sys
import os
import fnmatch
import re
import json

def quote(s):
	return "'%s'" % s

def main():

	print "// auto-generated by '%s'" % os.path.basename(__file__)

	paths = []
	for root, dirnames, filenames in os.walk('.'):
		for filename in fnmatch.filter(filenames, '*.json'):
			fullpath = os.path.join(root,filename)[2:]
			if fullpath.startswith('node_modules'):
				continue
			paths.append(fullpath)
	
	num_paths = len(paths)
	obj = {}
	for i,path in enumerate(paths):
		obj[path] = json.load(open(path))
	
	print "Ptero.jsonData =", json.dumps(obj,indent=4), ";"

if __name__ == "__main__":
	main()
