#!/usr/bin/env python

import sys
import os
import fnmatch
import re

def quote(s):
	return "'%s'" % s

base_colors = {
	"baby": {
		"dark": "rgba(60,125,117,1.000)",
		"light": "rgba(128,193,185,1.000)",
	},
	"adult": {
		"dark": "rgba(183,58,52,1.000)",
		"light": "rgba(206,52,52,1.000)",
	},
}

colors = {
	"baby_mountain_blue": {
		"dark": '#2A6598',
		"light": '#7EBBED',
	},
	"baby_mountain_purple": {
		"dark": '#6E179E',
		"light": '#BF56F6',
	},
	"adult_mountain_red": {
		"dark": '#892427',
		"light": '#B12432',
	},
	"adult_mountain_green": {
		"dark": '#24894B',
		"light": '#24B151',
	},
}

def main():

	print "// auto-generated by '%s'" % os.path.basename(__file__)

	# parse backgrounds
	print "Ptero.vectorPathData = {};"
	"""
	print "Ptero.vectorPathData = {"
	for root, dirnames, filenames in os.walk('bg/mountain/'):
		for filename in fnmatch.filter(filenames, '*.svg.js'):

			keyname = 'bg_mountain_' + filename[-9:-7]

			with open(os.path.join(root,filename)) as f:
				for line in f:
					if line.startswith('(function'):
						print '"%s": %s' % (keyname, line),
					elif line.startswith('})()'):
						print '})(),'
					else:
						print line,
	print "};"
	"""

	# create dynamic ptero functions
	for root, dirnames, filenames in os.walk('swf/pteros'):
		for filename in fnmatch.filter(filenames, '*.svg.js'):

			ptero = os.path.basename(root)
			if not ptero in base_colors:
				continue

			keyname = ptero + '_' + filename[:filename.index('.')]
			c = base_colors[ptero]
			dark_color = quote(c['dark'])
			light_color = quote(c['light'])

			with open(os.path.join(root,filename)) as f:
				for line in f:
					if line.startswith('(function'):
						print "function make_%s(darkColor, lightColor) {" % keyname
					elif line.startswith('})()'):
						print "}"
					else:
						s = line.replace(dark_color, 'darkColor').replace(light_color, 'lightColor')
						print s,

	# use dynamic ptero functions to generate all the colors
	for root, dirnames, filenames in os.walk('swf/pteros'):
		for filename in fnmatch.filter(filenames, '*.svg.js'):

			ptero = os.path.basename(root)
			index = filename[:filename.index('.')]

			if not ptero in colors:
				continue

			c = colors[ptero]

			keyname = ptero + '_' + index

			if ptero.startswith('baby'):
				rootname = 'baby'
			elif ptero.startswith('adult'):
				rootname = 'adult'
			else:
				raise Exception('no valid rootname for '+ptero)

			print 'Ptero.vectorPathData["%s"] = make_%s_%s("%s","%s");' % (keyname, rootname, index, c['dark'], c['light'])
	

if __name__ == "__main__":
	main()
